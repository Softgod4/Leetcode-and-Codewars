class Cipher:
    def __init__(self, code, shift):
        self.code = code
        self.shift = shift

    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∏—Ñ—Ä–∞ —Ü–µ–∑–∞—Ä—è (—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –≤ –æ–¥–Ω—É —Å—Ç–æ—Ä–æ–Ω—É, –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ 33 –∏ –ø–æ–ª—É—á–∏—Ç—å—Å—è –ê) üëá
    def coddingcode(self) -> str:
        alphabet = ['–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è', '–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è']
        arraycode = list(self.code)
        shifr = []
        
        # –£–∂–∞—Å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ—Ä–∏, –∫—Å—Ç–∞—Ç–∏ –æ–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –∞–Ω–≥–ª —Å–∏–º–≤–æ–ª—ã üëá
        for i in range(len(arraycode)):
            try:
                gaf = alphabet.index(arraycode[i].lower())
                gaf += self.shift
                shifr.append(alphabet[gaf])
            except:
                print('–Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç.')
                self.transcript()
                
        return (''.join(shifr))
    
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–≤–æ–¥–∞ –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π (—Å–¥–µ–ª–∞–ª –æ—Ç–¥–µ–ª—å–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ) üëá
    def transcript(self) -> str:
        self.code = input('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ')
        try:
            self.shift = int(input('–í–≤–µ–¥–∏—Ç–µ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª —Å–¥–µ–ª–∞—Ç—å —Å–¥–≤–∏–≥ (—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞): '))
            if self.shift >= 32:
                print('–Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫–æ–π –±–æ–ª—å—à–æ–π —Å–¥–≤–∏–≥')
                self.transcript()
        except:
            print('—Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞!')
            self.transcript()
        self.coddingcode()

if __name__ == '__main__':
    cipher = Cipher("", 0)
    cipher.transcript()
    result = cipher.coddingcode()
    print("–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", result)
